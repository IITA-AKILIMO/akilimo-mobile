name: Android CI
on:
  pull_request:
    branches:
      - master
  push:

jobs:

  run_tests:
    if: contains(github.ref, 'develop') || contains(github.ref, 'master')
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO_NAME: ${{ secrets.REPO_NAME }}
      LATEST_TAG_FILE: ${{ secrets.LATEST_TAG_FILE }}
      RELEASE_VERSION: ${{ secrets.GITHUB_RUN_ID }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Make gradlew executable
        run:  chmod +x ./gradlew

      - name: Run Unit tests
        run: ./gradlew testDebug
        continue-on-error: true
      
      - name: Make Unit test report
        uses: doanpt/AndroidTestReportAction@v1.0
        if: ${{ always() }} # IMPORTANT: run Android Test Report regardless

  build_artifacts:
    # if: contains(github.ref, 'develop') || contains(github.ref, 'master')
    # needs: [run_tests]
    name: Build artifacts
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO_NAME: ${{ secrets.REPO_NAME }}
      LATEST_TAG_FILE: ${{ secrets.LATEST_TAG_FILE }}
      RELEASE_VERSION: ${{ secrets.GITHUB_RUN_ID }}
      PACKAGE_NAME: "com.iita.akilimo"
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Python 3.9
        uses: actions/setup-python@v2

      - name: Download requirement file
        run: curl -L https://raw.githubusercontent.com/masgeek/py-github/develop/requirements.txt -o requirements.txt
      
      - name: Download Tag fetching script
        run: curl -L https://raw.githubusercontent.com/masgeek/py-github/develop/get-tag-raw.py -o latest-tag.py

      - name: Install dependencies
        run: pip install -r requirements.txt;

      - name: Fetch latest tag
        run: python latest-tag.py

      - name: Fetch latest tag
        run: which jarsigner

      - name: Update release version
        run: echo "RELEASE_VERSION=$(cat $LATEST_TAG_FILE)" >> $GITHUB_ENV

      - name: Show release tag
        run: echo $RELEASE_VERSION

      - name: Make gradlew executable
        run:  chmod +x ./gradlew

      - name: Generate android AAB
        run: ./gradlew bundleRelease -x test

      - name: Create release folder
        run: mkdir -p $GITHUB_WORKSPACE/release/signed

      - name: Reverse JKS file
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > $GITHUB_WORKSPACE/akilimo.jks

      - name: Sign AAB
        run:  jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore akilimo.jks 
          -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} 
          app/build/outputs/bundle/release/app-release.aab ${{ secrets.KEY_ALIAS }} --signedjar $GITHUB_WORKSPACE/release/signed/app-release-signed.aab

      - name: List signed files
        run: ls $GITHUB_WORKSPACE/release/signed

      - name: Upload to playstore
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          packageName: $PACKAGE_NAME
          releaseFiles: release/signed/*.aab
          track: alpha
          whatsNewDirectory: distribution/whatsnew
