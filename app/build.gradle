import java.time.LocalDateTime

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
//apply plugin: 'realm-android'

android {
    def releaseVersionName = computeBuildNumber()
    def appVersionCode = computeVersionCode()

    compileSdkVersion 30
    buildToolsVersion "30.0.0"
    ndkVersion "21.1.6352462"

    defaultConfig {
        applicationId "com.iita.akilimo"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode appVersionCode
        versionName releaseVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }
    buildTypes {
        release {
            minifyEnabled false //for some strange reason minifying causes the code to flip
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "PORT_NUMBER", "9080")
            versionNameSuffix ".debug"
//            pseudoLocalesEnabled true
        }
    }
    buildFeatures {
        viewBinding = true
//        dataBinding = false
    }
    lintOptions {
        checkReleaseBuilds false
//        fatal("MissingTranslation", "HardcodedText")
        abortOnError false
//        disable 'UselessParent','InvalidPackage', 'UnusedResources', 'TrustAllX509TrustManager', 'LabelFor'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

static def computeVersionName() {
    def versionMajor = 16
    def versionMinor = LocalDateTime.now().getMonthValue()
    def buildNumber = LocalDateTime.now().getDayOfMonth()

    return String.format('%d.%d.%d', Integer.valueOf(System.env.VERSION_MAJOR ?: versionMajor),
            Integer.valueOf(System.env.VERSION_MINOR ?: versionMinor),
            Integer.valueOf(System.env.BUILD_NUMBER ?: buildNumber))
}

static def computeBuildNumber() {
    def newFile = new File("nextrelease.txt")
    newFile.createNewFile()

    String dayOfYear = LocalDateTime.now().getYear() + "" + LocalDateTime.now().getDayOfYear()

    def gitVersionTag = System.env.RELEASE_VERSION ?: computeVersionName()
    def preRelease = System.env.BRANCH_NAME ?: "unknown"
    def buildNumber = System.env.BUILD_NUMBER ?: 1

    println("Branch is " + preRelease)
    println("Old build tag is " + gitVersionTag)

    if (preRelease == "develop") {
        def splitMe = gitVersionTag.split('\\.')
        def versionMajor = splitMe[0]
        def versionMinor = splitMe[1]
        def versionPatchRaw = splitMe[2].split('-')
        def versionPatch = versionPatchRaw[0].toInteger()
        gitVersionTag = String.format('%d.%d.beta%d',
                Integer.valueOf(versionMajor),
                Integer.valueOf(versionMinor),
                Integer.valueOf(dayOfYear))

        println("This build tag is " + gitVersionTag)
    }
    newFile.write(gitVersionTag)
    return gitVersionTag
}

def computeVersionCode() {

//    long unixTimestamp =Instant.now().getDayOfYear()
//    String dayOfYear = LocalDateTime.now().getYear() + "" + LocalDateTime.now().getDayOfYear()
    def versionCode = System.env.RELEASE_VERSION ? unixTimestamp.intValue() : 1594994638286
//    def versionCode = Integer.parseInt(dayOfYear)

    println("This build version timecode " + versionCode)
    return versionCode
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha04'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'androidx.multidex:multidex:2.0.1'


    // google library ------------------------------------------------------------------------
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.firebase:firebase-config:19.2.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    implementation 'com.google.firebase:firebase-messaging:20.2.3' //for push notifications
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.android:flexbox:0.3.2'                   // google flexible box
    implementation 'com.google.android.gms:play-services-ads:19.2.0' //Google ads

//    implementation "com.github.vicpinm:krealmextensions:2.5.0"
    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation "com.j256.ormlite:ormlite-android:5.1"
    implementation 'com.j256.ormlite:ormlite-core:5.1'

    implementation "androidx.room:room-runtime:2.2.5"


    // mapbox implementation------------------------------------------------------------------------
    // implementation 'com.mapbox.mapboxsdk:mapbox-android-navigation:0.41.0'
    // implementation 'com.mapbox.mapboxsdk:mapbox-android-navigation-ui:0.41.0'
    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:8.2.1') {
        // exclude group: 'group_name', module: 'module_name'
    }
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v8:0.7.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-places-v8:0.9.0'

    // third party dependencies -------------------------------------------------------------------
    implementation 'com.balysv:material-ripple:1.0.2'                   // ripple effect
    implementation 'com.github.bumptech.glide:glide:4.11.0'              // image loader
    implementation 'com.mikhaellopez:circularimageview:3.2.0'           // circle image view

    implementation 'net.danlew:android.joda:2.10.6'
    implementation 'com.github.mohammadatif:Animatoo:master'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.0' //feature discovery library
    implementation 'eu.the4thfloor.volley:com.android.volley:2015.05.28' //Volley library
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.nabinbhandari.android:permissions:3.7'
    implementation 'com.github.vipulasri:timelineview:1.1.1'
    implementation 'com.github.javiersantos:AppUpdater:2.7'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.4'

    //https://stackoverflow.com/questions/44826452/highlight-new-feature-in-android
    implementation 'org.modelmapper:modelmapper:2.3.7'
    implementation 'com.hbb20:ccp:2.3.7'

    implementation 'dev.b3nedikt.applocale:applocale:1.2.4' //App language switcher
    implementation 'io.github.inflationx:viewpump:2.0.3'
    implementation 'dev.b3nedikt.reword:reword:1.0.0'
    implementation 'com.github.blongho:worldCountryData:1.5'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    implementation 'com.stepstone.stepper:material-stepper:4.3.1'

    //If you are using Kotlin, replace annotationProcessor with kapt.
    kapt 'androidx.room:room-compiler:2.2.5'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    kapt 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'

    testAnnotationProcessor 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
    testImplementation 'joda-time:joda-time:2.10.6'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //debugImplementation because LeakCanary should only run in debug builds.
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    implementation project(':nativetemplates') //google add templates

}